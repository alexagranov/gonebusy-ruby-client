# This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).

module Gonebusy
  class EntitiesPricingModelResponse < BaseModel
    # id of PricingModel
    # @return [Integer]
    attr_accessor :id

    # id of owner of PricingModel
    # @return [Integer]
    attr_accessor :owner_id

    # name of PricingModel
    # @return [String]
    attr_accessor :name

    # notes and description
    # @return [String]
    attr_accessor :notes

    # type of PricingModel
    # @return [String]
    attr_accessor :pricing_model_type

    # price/rate
    # @return [String]
    attr_accessor :price

    # currency symbol, as per ISO-4217
    # @return [String]
    attr_accessor :currency

    # A mapping from model property names to API property names
    def self.names
      if @_hash.nil?
        @_hash = {}
        @_hash["id"] = "id"
        @_hash["owner_id"] = "owner_id"
        @_hash["name"] = "name"
        @_hash["notes"] = "notes"
        @_hash["pricing_model_type"] = "pricing_model_type"
        @_hash["price"] = "price"
        @_hash["currency"] = "currency"
      end
      @_hash
    end

    def initialize(id = nil,
                   owner_id = nil,
                   name = nil,
                   notes = nil,
                   pricing_model_type = nil,
                   price = nil,
                   currency = nil)
      @id = id
      @owner_id = owner_id
      @name = name
      @notes = notes
      @pricing_model_type = pricing_model_type
      @price = price
      @currency = currency
    end

    # Creates an instance of the object from a hash
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash
      id = hash['id']
      owner_id = hash['owner_id']
      name = hash['name']
      notes = hash['notes']
      pricing_model_type = hash['pricing_model_type']
      price = hash['price']
      currency = hash['currency']

      # Create object from extracted values
      EntitiesPricingModelResponse.new(id,
                                       owner_id,
                                       name,
                                       notes,
                                       pricing_model_type,
                                       price,
                                       currency)
    end
  end
end
