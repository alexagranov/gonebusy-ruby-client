# This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).

module Gonebusy
  class EntitiesResourceResponse < BaseModel
    # id of Resource
    # @return [Integer]
    attr_accessor :id

    # name of Resource
    # @return [String]
    attr_accessor :name

    # description of Resource
    # @return [String]
    attr_accessor :description

    # id of User owning Resource
    # @return [Integer]
    attr_accessor :owner_id

    # type of Resource
    # @return [String]
    attr_accessor :resource_type

    # capacity of Resource, if applicable
    # @return [Integer]
    attr_accessor :capacity

    # gender of Resource, if applicable
    # @return [String]
    attr_accessor :gender

    # type Id of Thing Resource, if applicable
    # @return [Integer]
    attr_accessor :thing_type_id

    # if Calendar is primary, if applicable
    # @return [Boolean]
    attr_accessor :primary_cal

    # A mapping from model property names to API property names
    def self.names
      if @_hash.nil?
        @_hash = {}
        @_hash["id"] = "id"
        @_hash["name"] = "name"
        @_hash["description"] = "description"
        @_hash["owner_id"] = "owner_id"
        @_hash["resource_type"] = "resource_type"
        @_hash["capacity"] = "capacity"
        @_hash["gender"] = "gender"
        @_hash["thing_type_id"] = "thing_type_id"
        @_hash["primary_cal"] = "primary_cal"
      end
      @_hash
    end

    def initialize(id = nil,
                   name = nil,
                   description = nil,
                   owner_id = nil,
                   resource_type = nil,
                   capacity = nil,
                   gender = nil,
                   thing_type_id = nil,
                   primary_cal = nil)
      @id = id
      @name = name
      @description = description
      @owner_id = owner_id
      @resource_type = resource_type
      @capacity = capacity
      @gender = gender
      @thing_type_id = thing_type_id
      @primary_cal = primary_cal
    end

    # Creates an instance of the object from a hash
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash
      id = hash['id']
      name = hash['name']
      description = hash['description']
      owner_id = hash['owner_id']
      resource_type = hash['resource_type']
      capacity = hash['capacity']
      gender = hash['gender']
      thing_type_id = hash['thing_type_id']
      primary_cal = hash['primary_cal']

      # Create object from extracted values
      EntitiesResourceResponse.new(id,
                                   name,
                                   description,
                                   owner_id,
                                   resource_type,
                                   capacity,
                                   gender,
                                   thing_type_id,
                                   primary_cal)
    end
  end
end
